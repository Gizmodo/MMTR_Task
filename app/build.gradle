plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id "scabbard.gradle" version "0.5.0"
    id 'androidx.navigation.safeargs'
    id 'io.gitlab.arturbosch.detekt'
}

ext.versionMajor = 1
ext.versionMinor = 1
ext.versionPatch = 0

@SuppressWarnings('GrMethodMayBeStatic')
def generateVersionCode() {
    return ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

def generateVersionName() {
    String versionName = "${versionMajor}.${versionMinor}.${versionPatch}"
    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
    } else {
        versionProps['BUILD_NUMBER'] = '0'
    }

    def buildNumber = versionProps['BUILD_NUMBER'].toInteger() + 1
    versionProps['BUILD_NUMBER'] = buildNumber.toString()
    versionProps.store(versionPropsFile.newWriter(), null)

    return "${versionName}.BN-${buildNumber}"
}

android {
    compileSdk sdk
    buildToolsVersion '33.0.0 rc2'

    defaultConfig {
        applicationId "com.example.fragmentvm"
        minSdk 21
        targetSdk 32
        versionCode generateVersionCode()
        versionName generateVersionName()
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources.excludes += "DebugProbesKt.bin"
        resources.excludes += '/META-INF/{AL2.0,LGPL2.1}'
    }
}
scabbard {
    enabled false
    failOnError true
    fullBindingGraphValidation true
    qualifiedNames false
    outputFormat "svg"
}
detekt {
    toolVersion = "1.19.0"
    buildUponDefaultConfig = false
    allRules = false
    config = files("$rootDir/detekt/detekt.yml")
    baseline = file("$rootDir/detekt/baseline.xml")
    debug = true
    parallel = true
    setSource(files(projectDir))
}
dependencies {
    implementation "androidx.activity:activity-ktx:$activity_ktx"
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.datastore:datastore-preferences-rxjava3:$datastore"
    implementation "androidx.datastore:datastore-preferences:$datastore"
    implementation "androidx.datastore:datastore-rxjava3:$datastore"
    implementation "androidx.datastore:datastore:$datastore"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav"
    implementation "androidx.navigation:navigation-runtime:$nav"
    implementation "androidx.navigation:navigation-ui-ktx:$nav"
    implementation "androidx.paging:paging-compose:1.0.0-alpha14"
    implementation "androidx.paging:paging-guava:$paging"
    implementation "androidx.paging:paging-runtime:$paging"
    implementation "androidx.paging:paging-rxjava2:$paging"
    implementation "androidx.paging:paging-rxjava3:$paging"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout"
    implementation "com.github.bumptech.glide:glide:$glide"
    implementation "com.google.android.material:material:$material"
    implementation "com.google.code.gson:gson:$gson"
    implementation "com.google.dagger:dagger:$dagger"
    implementation "com.jakewharton.timber:timber:$timber"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "io.reactivex.rxjava3:rxandroid:$rxandroid"
    implementation "io.reactivex.rxjava3:rxjava:$rxjava"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.github.bumptech.glide:compiler:$glide"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    testImplementation "androidx.paging:paging-common:$paging"
}
tasks.named("detekt").configure {
    reports {
        html.required.set(true)
        html.outputLocation.set(file("build/reports/detekt.html"))
    }
}